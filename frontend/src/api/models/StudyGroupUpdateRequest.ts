/* tslint:disable */
/* eslint-disable */
/**
 * IS Project API
 * Бэкенд для управления учебными группами и связанными сущностями. 
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { CoordinatesAddRequest } from './CoordinatesAddRequest';
import {
    CoordinatesAddRequestFromJSON,
    CoordinatesAddRequestFromJSONTyped,
    CoordinatesAddRequestToJSON,
    CoordinatesAddRequestToJSONTyped,
} from './CoordinatesAddRequest';
import type { FormOfEducation } from './FormOfEducation';
import {
    FormOfEducationFromJSON,
    FormOfEducationFromJSONTyped,
    FormOfEducationToJSON,
    FormOfEducationToJSONTyped,
} from './FormOfEducation';
import type { Semester } from './Semester';
import {
    SemesterFromJSON,
    SemesterFromJSONTyped,
    SemesterToJSON,
    SemesterToJSONTyped,
} from './Semester';
import type { PersonAddRequest } from './PersonAddRequest';
import {
    PersonAddRequestFromJSON,
    PersonAddRequestFromJSONTyped,
    PersonAddRequestToJSON,
    PersonAddRequestToJSONTyped,
} from './PersonAddRequest';

/**
 * 
 * @export
 * @interface StudyGroupUpdateRequest
 */
export interface StudyGroupUpdateRequest {
    /**
     * 
     * @type {string}
     * @memberof StudyGroupUpdateRequest
     */
    name?: string;
    /**
     * 
     * @type {number}
     * @memberof StudyGroupUpdateRequest
     */
    coordinatesId?: number;
    /**
     * 
     * @type {CoordinatesAddRequest}
     * @memberof StudyGroupUpdateRequest
     */
    coordinates?: CoordinatesAddRequest;
    /**
     * 
     * @type {number}
     * @memberof StudyGroupUpdateRequest
     */
    studentsCount?: number;
    /**
     * 
     * @type {boolean}
     * @memberof StudyGroupUpdateRequest
     */
    clearStudentsCount?: boolean;
    /**
     * 
     * @type {number}
     * @memberof StudyGroupUpdateRequest
     */
    expelledStudents?: number;
    /**
     * 
     * @type {number}
     * @memberof StudyGroupUpdateRequest
     */
    transferredStudents?: number;
    /**
     * 
     * @type {FormOfEducation}
     * @memberof StudyGroupUpdateRequest
     */
    formOfEducation?: FormOfEducation;
    /**
     * 
     * @type {boolean}
     * @memberof StudyGroupUpdateRequest
     */
    clearFormOfEducation?: boolean;
    /**
     * 
     * @type {number}
     * @memberof StudyGroupUpdateRequest
     */
    shouldBeExpelled?: number;
    /**
     * 
     * @type {number}
     * @memberof StudyGroupUpdateRequest
     */
    averageMark?: number;
    /**
     * 
     * @type {boolean}
     * @memberof StudyGroupUpdateRequest
     */
    clearAverageMark?: boolean;
    /**
     * 
     * @type {Semester}
     * @memberof StudyGroupUpdateRequest
     */
    semesterEnum?: Semester;
    /**
     * 
     * @type {number}
     * @memberof StudyGroupUpdateRequest
     */
    groupAdminId?: number;
    /**
     * 
     * @type {PersonAddRequest}
     * @memberof StudyGroupUpdateRequest
     */
    groupAdmin?: PersonAddRequest;
    /**
     * 
     * @type {boolean}
     * @memberof StudyGroupUpdateRequest
     */
    removeGroupAdmin?: boolean;
}



/**
 * Check if a given object implements the StudyGroupUpdateRequest interface.
 */
export function instanceOfStudyGroupUpdateRequest(value: object): value is StudyGroupUpdateRequest {
    return true;
}

export function StudyGroupUpdateRequestFromJSON(json: any): StudyGroupUpdateRequest {
    return StudyGroupUpdateRequestFromJSONTyped(json, false);
}

export function StudyGroupUpdateRequestFromJSONTyped(json: any, ignoreDiscriminator: boolean): StudyGroupUpdateRequest {
    if (json == null) {
        return json;
    }
    return {
        
        'name': json['name'] == null ? undefined : json['name'],
        'coordinatesId': json['coordinatesId'] == null ? undefined : json['coordinatesId'],
        'coordinates': json['coordinates'] == null ? undefined : CoordinatesAddRequestFromJSON(json['coordinates']),
        'studentsCount': json['studentsCount'] == null ? undefined : json['studentsCount'],
        'clearStudentsCount': json['clearStudentsCount'] == null ? undefined : json['clearStudentsCount'],
        'expelledStudents': json['expelledStudents'] == null ? undefined : json['expelledStudents'],
        'transferredStudents': json['transferredStudents'] == null ? undefined : json['transferredStudents'],
        'formOfEducation': json['formOfEducation'] == null ? undefined : FormOfEducationFromJSON(json['formOfEducation']),
        'clearFormOfEducation': json['clearFormOfEducation'] == null ? undefined : json['clearFormOfEducation'],
        'shouldBeExpelled': json['shouldBeExpelled'] == null ? undefined : json['shouldBeExpelled'],
        'averageMark': json['averageMark'] == null ? undefined : json['averageMark'],
        'clearAverageMark': json['clearAverageMark'] == null ? undefined : json['clearAverageMark'],
        'semesterEnum': json['semesterEnum'] == null ? undefined : SemesterFromJSON(json['semesterEnum']),
        'groupAdminId': json['groupAdminId'] == null ? undefined : json['groupAdminId'],
        'groupAdmin': json['groupAdmin'] == null ? undefined : PersonAddRequestFromJSON(json['groupAdmin']),
        'removeGroupAdmin': json['removeGroupAdmin'] == null ? undefined : json['removeGroupAdmin'],
    };
}

export function StudyGroupUpdateRequestToJSON(json: any): StudyGroupUpdateRequest {
    return StudyGroupUpdateRequestToJSONTyped(json, false);
}

export function StudyGroupUpdateRequestToJSONTyped(value?: StudyGroupUpdateRequest | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'name': value['name'],
        'coordinatesId': value['coordinatesId'],
        'coordinates': CoordinatesAddRequestToJSON(value['coordinates']),
        'studentsCount': value['studentsCount'],
        'clearStudentsCount': value['clearStudentsCount'],
        'expelledStudents': value['expelledStudents'],
        'transferredStudents': value['transferredStudents'],
        'formOfEducation': FormOfEducationToJSON(value['formOfEducation']),
        'clearFormOfEducation': value['clearFormOfEducation'],
        'shouldBeExpelled': value['shouldBeExpelled'],
        'averageMark': value['averageMark'],
        'clearAverageMark': value['clearAverageMark'],
        'semesterEnum': SemesterToJSON(value['semesterEnum']),
        'groupAdminId': value['groupAdminId'],
        'groupAdmin': PersonAddRequestToJSON(value['groupAdmin']),
        'removeGroupAdmin': value['removeGroupAdmin'],
    };
}

