/* tslint:disable */
/* eslint-disable */
/**
 * IS Project API
 * Бэкенд для управления учебными группами и связанными сущностями. 
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { CoordinatesAddRequest } from './CoordinatesAddRequest';
import {
    CoordinatesAddRequestFromJSON,
    CoordinatesAddRequestFromJSONTyped,
    CoordinatesAddRequestToJSON,
    CoordinatesAddRequestToJSONTyped,
} from './CoordinatesAddRequest';
import type { FormOfEducation } from './FormOfEducation';
import {
    FormOfEducationFromJSON,
    FormOfEducationFromJSONTyped,
    FormOfEducationToJSON,
    FormOfEducationToJSONTyped,
} from './FormOfEducation';
import type { Semester } from './Semester';
import {
    SemesterFromJSON,
    SemesterFromJSONTyped,
    SemesterToJSON,
    SemesterToJSONTyped,
} from './Semester';
import type { PersonAddRequest } from './PersonAddRequest';
import {
    PersonAddRequestFromJSON,
    PersonAddRequestFromJSONTyped,
    PersonAddRequestToJSON,
    PersonAddRequestToJSONTyped,
} from './PersonAddRequest';

/**
 * 
 * @export
 * @interface StudyGroupAddRequest
 */
export interface StudyGroupAddRequest {
    /**
     * 
     * @type {string}
     * @memberof StudyGroupAddRequest
     */
    name: string;
    /**
     * 
     * @type {number}
     * @memberof StudyGroupAddRequest
     */
    coordinatesId?: number;
    /**
     * 
     * @type {CoordinatesAddRequest}
     * @memberof StudyGroupAddRequest
     */
    coordinates?: CoordinatesAddRequest;
    /**
     * 
     * @type {number}
     * @memberof StudyGroupAddRequest
     */
    studentsCount?: number;
    /**
     * 
     * @type {number}
     * @memberof StudyGroupAddRequest
     */
    expelledStudents: number;
    /**
     * 
     * @type {number}
     * @memberof StudyGroupAddRequest
     */
    transferredStudents: number;
    /**
     * 
     * @type {FormOfEducation}
     * @memberof StudyGroupAddRequest
     */
    formOfEducation?: FormOfEducation;
    /**
     * 
     * @type {number}
     * @memberof StudyGroupAddRequest
     */
    shouldBeExpelled: number;
    /**
     * 
     * @type {number}
     * @memberof StudyGroupAddRequest
     */
    averageMark?: number;
    /**
     * 
     * @type {Semester}
     * @memberof StudyGroupAddRequest
     */
    semesterEnum: Semester;
    /**
     * 
     * @type {number}
     * @memberof StudyGroupAddRequest
     */
    groupAdminId?: number;
    /**
     * 
     * @type {PersonAddRequest}
     * @memberof StudyGroupAddRequest
     */
    groupAdmin?: PersonAddRequest;
}



/**
 * Check if a given object implements the StudyGroupAddRequest interface.
 */
export function instanceOfStudyGroupAddRequest(value: object): value is StudyGroupAddRequest {
    if (!('name' in value) || value['name'] === undefined) return false;
    if (!('expelledStudents' in value) || value['expelledStudents'] === undefined) return false;
    if (!('transferredStudents' in value) || value['transferredStudents'] === undefined) return false;
    if (!('shouldBeExpelled' in value) || value['shouldBeExpelled'] === undefined) return false;
    if (!('semesterEnum' in value) || value['semesterEnum'] === undefined) return false;
    return true;
}

export function StudyGroupAddRequestFromJSON(json: any): StudyGroupAddRequest {
    return StudyGroupAddRequestFromJSONTyped(json, false);
}

export function StudyGroupAddRequestFromJSONTyped(json: any, ignoreDiscriminator: boolean): StudyGroupAddRequest {
    if (json == null) {
        return json;
    }
    return {
        
        'name': json['name'],
        'coordinatesId': json['coordinatesId'] == null ? undefined : json['coordinatesId'],
        'coordinates': json['coordinates'] == null ? undefined : CoordinatesAddRequestFromJSON(json['coordinates']),
        'studentsCount': json['studentsCount'] == null ? undefined : json['studentsCount'],
        'expelledStudents': json['expelledStudents'],
        'transferredStudents': json['transferredStudents'],
        'formOfEducation': json['formOfEducation'] == null ? undefined : FormOfEducationFromJSON(json['formOfEducation']),
        'shouldBeExpelled': json['shouldBeExpelled'],
        'averageMark': json['averageMark'] == null ? undefined : json['averageMark'],
        'semesterEnum': SemesterFromJSON(json['semesterEnum']),
        'groupAdminId': json['groupAdminId'] == null ? undefined : json['groupAdminId'],
        'groupAdmin': json['groupAdmin'] == null ? undefined : PersonAddRequestFromJSON(json['groupAdmin']),
    };
}

export function StudyGroupAddRequestToJSON(json: any): StudyGroupAddRequest {
    return StudyGroupAddRequestToJSONTyped(json, false);
}

export function StudyGroupAddRequestToJSONTyped(value?: StudyGroupAddRequest | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'name': value['name'],
        'coordinatesId': value['coordinatesId'],
        'coordinates': CoordinatesAddRequestToJSON(value['coordinates']),
        'studentsCount': value['studentsCount'],
        'expelledStudents': value['expelledStudents'],
        'transferredStudents': value['transferredStudents'],
        'formOfEducation': FormOfEducationToJSON(value['formOfEducation']),
        'shouldBeExpelled': value['shouldBeExpelled'],
        'averageMark': value['averageMark'],
        'semesterEnum': SemesterToJSON(value['semesterEnum']),
        'groupAdminId': value['groupAdminId'],
        'groupAdmin': PersonAddRequestToJSON(value['groupAdmin']),
    };
}

